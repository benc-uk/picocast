pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
#include vector.lua
bsize = 4

p = {}
p.x = 2
p.y = 2
p.f = v_new(1, 0)
wall_height = 64
fov = 0.15
turn_speed = 0.015
move_speed = 0.25
view_dist = 10
ray_step = 0.06
speed = 0
turn = 0

function _update()
  if (btn(0)) then turn  =  turn_speed end
  if (btn(1)) then turn  = -turn_speed end
  if (btn(2)) then speed =  move_speed end
  if (btn(3)) then speed = -move_speed end

  if (turn != 0) then
    v_rotate(p.f, turn)
  end

  if (speed != 0) then
    local px = p.x + p.f.x * speed
    local py = p.y + p.f.y * speed
    if (mget(px, py) == 0) then
      p.x = px
      p.y = py
    end
  end

  speed = speed * 0.5
  turn = turn * 0.5
  if (speed < 0.0001) then speed = 0 end
  if (turn < 0.0001) then turn = 0 end
end

function _draw()
  rectfill(0, 0, 127, 63, 12)
  rectfill(0, 64, 127, 127, 3)

  local vr = v_new(p.f.x, p.f.y)
  v_rotate(vr, fov/2)
  for x_col = 0, 127, 1 do 
    hit = cast_ray(p.x, p.y, vr, ray_step, view_dist)
    if (hit.cell > 0) then
      local hitx = hit.x - flr(hit.x) 
      local hity = hit.y - flr(hit.y)

      c = 5
      if (hit.x < flr(hit.x)+.5 and hit.y < ceil(hit.y)-0.04) then c = 2 end
      -- if (hity < 0.06) then c = 7 end

      draw_wall_column(x_col, hit.dist, c)
      print(hit.x..","..hitx, 0, x_col*8, 2)
    else
      draw_wall_column(x_col, view_dist*2, 0)
    end
    v_rotate(vr, -fov/128)
  end

  -- for x=0,127 do
  --   for y=0, 63 do
  --     m = mget(x,y)
  --     if (m > 0) then   
  --       draw_square(x*bsize, y*bsize, bsize, m)
  --     end
  --   end
  -- end

  print(p.x, 0, 0, 11)
  print(p.y, 32, 0, 11)
end

function draw_wall_column(x, dist, cell)
  -- correct fish eye effect by scaling the distance
  dist = dist * cos(fov/128 * abs(x - 64))
  local ch = wall_height / dist
  line(x, 64 - ch, x, 64 + ch, cell)
end

function cast_ray(px, py, v, step, dist, draw)
  draw = draw or false
  local hit = {}
  hit.dist = dist
  hit.cell = 0
  hit.x = -1
  hit.y = -1

  local t = 0
  while t < dist do
    t = t + step
    local x = px + v.x * t
    local y = py + v.y * t
    if(draw) then
      pset(x*bsize, y*bsize, 11)
    end

    if mget(x, y) != 0 then
      hit.dist = t
      hit.cell = mget(flr(x), flr(y))
      hit.x = x
      hit.y = y
      return hit
    end
  end

  return hit
end

function draw_square(x, y, w, c)
  w = w - 1
  rectfill(x, y, x + w, y + w, c)
  rect(x, y, x + w, y + w, 10)
end
__gfx__
00000000111111112222222233333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111112222222233333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700111111112222222233333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000111111112222222233333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000111111112222222233333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700111111112222222233333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111112222222233333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000111111112222222233333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000008000000000000080008000080000800000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000800000000000808808000080008000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000080000000000800088000800008000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000080000000000800008888000080000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000008800000008000080000000800000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000088000008000080000008000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000880008000800008880000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000008888888888880000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000008008000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000008880000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
